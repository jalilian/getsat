% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cams.R
\name{get_cams}
\alias{get_cams}
\title{Download CAMS European Air Quality Data}
\usage{
get_cams(
  key,
  vars,
  where,
  year,
  month = 1:12,
  level = "0",
  agglevel = "days",
  tempdir = NULL
)
}
\arguments{
\item{key}{A character string. ECMWF API key associated with your ECMWF account.}

\item{vars}{A character vector specifying air quality variables to retrieve.
Supported values include:
\itemize{
\item "ammonia" – Ammonia (NH$_3$)
\item "carbon_monoxide" – Carbon monoxide (CO)
\item "formaldehyde" – Formaldehyde (HCHO)
\item "glyoxal" – Glyoxal (CHOCHO)
\item "nitrogen_dioxide" – Nitrogen dioxide (NO$_2$)
\item "nitrogen_monoxide" – Nitrogen monoxide (NO)
\item "non_methane_vocs" – Non-methane volatile organic compounds (NMVOCs)
\item "ozone" – Ozone (O$_3$)
\item "particulate_matter_10um" – Particulate matter with diameter < 10 µm (PM10)
\item "dust" – PM10 dust fraction
\item "pm10_sea_salt_dry" – PM10 sea salt (dry)
\item "pm10_wildfires" – PM10 from wildfires only
\item "particulate_matter_2.5um" – Particulate matter with diameter < 2.5 µm (PM2.5)
\item "total_elementary_carbon" – PM2.5 total anthropogenic carbon
\item "residential_elementary_carbon" – PM2.5 residential anthropogenic carbon
\item "secondary_inorganic_aerosol" – PM2.5 secondary inorganic aerosol (SIA)
\item "pm2.5_total_organic_matter" – PM2.5 total organic matter
\item "peroxyacyl_nitrates" – Peroxyacyl nitrates (PANs)
\item "sulphur_dioxide" – Sulphur dioxide (SO$_2$)
}}

\item{where}{Either:
\itemize{
\item A numeric vector of length 4 defining the bounding box for the region of
interest, in the longitude/latitude format \code{c(North, West, South, East)}.
Coordinates must be in WGS84 and fall within:
- North: 72.0° N
- South: 30.0° N
- West: -45.0° W
- East:  25.0° W
\item A matrix or data frame with two columns representing
longitude (first column) and latitude (second column) of points.
All coordinates must be in the WGS84 coordinate reference system.
}}

\item{year}{A numeric value indicating the year for which data is requested.
Available years range from 2013 to 2023. If the year is 2022 or earlier,
validated reanalysis data is used; for 2023 onward, interim reanalysis data is used.}

\item{month}{A numeric or character vector specifying the months (default: \code{1:12}).
The values are formatted as two-digit strings (e.g., "01", "02").}

\item{level}{A character or numeric value indicating the vertical level above
the surface (default: "0" for surface level). Possible values include:
\itemize{
\item "0" (surface)
\item "50m", "100m", "250m", "500m", "750m"
\item "1000m", "2000m", "3000m", "5000m"
}}

\item{agglevel}{A character string specifying the temporal aggregation level.
Available options:
\itemize{
\item \code{NULL} (no aggregation)
\item "years", "months", "yearmonths"
\item "dekads" (10-day periods), "yeardekads"
\item "weeks" (ISO 8601 week number), "yearweeks"
\item "days" (default), "doy" (day of the year)
\item "7days", "10days", "15days"
}}

\item{tempdir}{A character string specifying a temporary directory for downloaded files.
If not specified (default), the system's temporary directory (\code{tempdir()}) is used.}
}
\value{
If \code{where} is a bounding box (vector of length four), a \code{SpatRaster} object
(or a list of them) representing the selected air quality variables. If \code{where} is
a matrix or data frame, a \code{data.frame} containing coordinates and corresponding values.
}
\description{
This function retrieves air quality data from the Copernicus Atmosphere
Monitoring Service (CAMS) using the ECMWF API. It fetches validated
reanalysis data and forecasts for the European domain, covering longitudes
from 45.0° W to 25.0° E and latitudes from 30.0° N to 72.0° N. The data has
a high spatial resolution of 0.1 degrees (~10 km) and is generated through
an ensemble of eleven air quality forecasting systems combined with
observations from the European Environment Agency (EEA) using data
assimilation techniques. Please follow the license and terms of use from
Copernicus and ECMWF. Failure to comply may result in data usage policy
violations.
}
\details{
The function facilitates the automated retrieval of air quality data from the CAMS
reanalysis database. It performs the following steps:
\enumerate{
\item Authenticates with ECMWF using the provided API key.
\item Creates a temporary directory for data storage.
\item Constructs and validates the data request.
\item Downloads data in ZIP format.
\item Extracts the ZIP archive and loads the data as a \code{SpatRaster} object.
}

\strong{Important Note:}
Any use of data provided by the Copernicus Atmosphere Data Store must include
proper citation and acknowledgement of the data sources. Users are required to
follow the license and terms of use specified by Copernicus and ECMWF.
Failure to do so may violate the data usage policies.
}
\examples{
\dontrun{
# Define geographical area (North, West, South, East)
area <- c(47.1, 6.6, 35.4, 18.6)

# Set ECMWF API key (replace with your actual key)
key <- "********************************"

# Download ozone concentration data for March 2021
oz1 <- get_cams(key, vars = "ozone", year = 2021, month = 3, where = area)

# Plot the retrieved data
plot(oz1)

# Download ozone and  Nitrogen dioxide data for March 2021
oz2 <- get_cams(key, vars = c("ozone", "nitrogen_dioxide"),
                where = cbind(runif(100, 6, 18), runif(100, 36, 47)),
                year = 2021, month = 3)
print(st2)
}

}
\references{
\itemize{
\item Copyright and licences: http://www.copernicus.eu/en/access-data/copyright-and-licences and https://www.ecmwf.int/en/terms-use
\item Copernicus Atmosphere Monitoring Service (CAMS): https://atmosphere.copernicus.eu/
\item ECMWF API Documentation: https://confluence.ecmwf.int/display/WEBAPI/Access+ECMWF+Public+Datasets
}
}
\seealso{
\link[terra]{rast}, \link[ecmwfr]{wf_set_key}, \link[ecmwfr]{wf_request}
}
\author{
Abdollah Jalilian
}
